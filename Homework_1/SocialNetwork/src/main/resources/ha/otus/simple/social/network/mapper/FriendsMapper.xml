<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ha.otus.simple.social.network.mapper.FriendsMapper">
    <resultMap id="userMap" type="ha.otus.simple.social.network.model.SysUser">
        <id property="userId" column="user_id"/>
        <result property="userName" column="username"/>
        <result property="password" column="password"/>
        <result property="firstName" column="first_name"/>
        <result property="lastName" column="last_name"/>
        <result property="age" column="age"/>
        <result property="sex" column="sex"/>
        <result property="interest" column="interest"/>
        <result property="city" column="city"/>
        <result property="status" column="status"/>

    </resultMap>


    <select id="getFriends" parameterType="Long" resultMap="userMap">

        select u.*
        from  friends f
                  inner join
              users u
              on f.friend_id = u.user_id
        where f.user_id = #{id}
    </select>

    <select id="getAcceptedFriendshipUsers" parameterType="Long" resultMap="userMap">
        select u.*
            from  friends f
        inner join
              users u
        on f.user_id = u.user_id
        where f.user_id= #{id}

    </select>

    <select id="checkFriendship" parameterType="ha.otus.simple.social.network.model.Friendship" resultType="Boolean">
        SELECT
               1
            FROM
                 friends f
            WHERE (f.user_id= #{user_id}  AND f.friend_id= #{friend_id})
            OR (f.friend_id= #{friend_id} AND f.user_id= #{user_id})

    </select>





<!--
    <update id="updateUser" parameterType="ha.otus.simple.social.network.model.SysUser">
        UPDATE users SET

           , #{userName}
           , #{password}
           , #{firstName}
           , #{lastName}
           , #{age}
           , #{sex}
           , #{city}
           , #{status}

        WHERE  user_id = #{userId}

    </update>
-->

<!--
                         user_id BIGINT not null,
                         friend_id BIGINT not null
-->
    <insert id="addToFriends" parameterType="ha.otus.simple.social.network.model.Friendship">
        INSERT INTO friends
        (
            user_id
            , friend_id
        )
        VALUES
        (
             #{user_id}
            , #{friend_id}
        )
    </insert>

    <insert id="deleteFriendship" parameterType="ha.otus.simple.social.network.model.Friendship">
        delete from friends
        where
            user_id = #{user_id}
            and friend_id = #{friend_id}
    </insert>

</mapper>